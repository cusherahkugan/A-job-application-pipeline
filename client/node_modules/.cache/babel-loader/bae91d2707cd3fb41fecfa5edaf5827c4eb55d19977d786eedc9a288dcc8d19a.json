{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\job-application-pipeline\\\\client\\\\src\\\\components\\\\BackgroundAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\n\n// Seeded random function to ensure consistent positions on refresh\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SeededRandom {\n  constructor(seed) {\n    this.seed = seed;\n  }\n\n  // Simple random number generator with seed\n  random() {\n    const x = Math.sin(this.seed++) * 10000;\n    return x - Math.floor(x);\n  }\n\n  // Get random number in range\n  range(min, max) {\n    return min + this.random() * (max - min);\n  }\n\n  // Random boolean with probability\n  boolean(probability = 0.5) {\n    return this.random() < probability;\n  }\n}\n\n// Floating rings background animation with fixed positions\nconst FloatingRingsBackground = ({\n  darkMode\n}) => {\n  _s();\n  // Use a constant seed for consistent positions\n  const seededRandom = useMemo(() => new SeededRandom(42), []);\n  const [rings, setRings] = useState([]);\n  useEffect(() => {\n    // Generate evenly distributed ring elements\n    const generateRings = () => {\n      const cols = window.innerWidth < 768 ? 2 : 3;\n      const rows = window.innerWidth < 768 ? 3 : 3;\n      const totalRings = cols * rows;\n      const newRings = [];\n\n      // Create a grid\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          // Calculate position in the grid (evenly distributed)\n          // Add some randomness within each cell\n          const cellWidth = 100 / cols;\n          const cellHeight = 100 / rows;\n          const xBase = col * cellWidth;\n          const yBase = row * cellHeight;\n\n          // Add randomness within the cell (±20% of cell size)\n          const xOffset = seededRandom.range(-0.2, 0.2) * cellWidth;\n          const yOffset = seededRandom.range(-0.2, 0.2) * cellHeight;\n          const xPos = xBase + cellWidth / 2 + xOffset;\n          const yPos = yBase + cellHeight / 2 + yOffset;\n\n          // Ring properties\n          const size = seededRandom.range(200, 400); // Size between 200px and 400px\n          // Massively increased thickness (50-125px)\n          const thickness = seededRandom.range(50, 125);\n\n          // Random movement direction\n          const xDirection = seededRandom.boolean() ? 1 : -1;\n          const yDirection = seededRandom.boolean() ? 1 : -1;\n\n          // Random movement duration & distance\n          const duration = seededRandom.range(15, 45); // Animation duration between 15s and 45s\n          const xDistance = seededRandom.range(10, 30); // Move 10-30% horizontally\n          const yDistance = seededRandom.range(10, 30); // Move 10-30% vertically\n\n          // Random delay\n          const delay = seededRandom.range(-20, 0);\n\n          // Random gradient angle\n          const gradientAngle = Math.floor(seededRandom.range(0, 360));\n          const ringId = row * cols + col;\n          newRings.push({\n            id: ringId,\n            size,\n            x: xPos,\n            y: yPos,\n            thickness,\n            xDirection,\n            yDirection,\n            duration,\n            xDistance,\n            yDistance,\n            delay,\n            gradientAngle\n          });\n        }\n      }\n      setRings(newRings);\n    };\n    generateRings();\n\n    // Regenerate on window resize\n    const handleResize = () => {\n      generateRings();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [seededRandom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rings-animation-container absolute inset-0 overflow-hidden z-0\",\n    style: {\n      pointerEvents: 'none'\n    },\n    children: [rings.map(ring => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute rounded-full\",\n      style: {\n        width: `${ring.size}px`,\n        height: `${ring.size}px`,\n        // Use border property for reliable hollow rings\n        border: `${ring.thickness}px solid`,\n        borderImage: getGradient(ring.gradientAngle, darkMode),\n        // For browsers that don't support borderImage, provide a fallback color\n        borderColor: darkMode ? 'rgba(132, 204, 22, 0.7)' : 'rgba(16, 185, 129, 0.7)',\n        // Make the background transparent to create a hollow ring\n        background: 'transparent',\n        // Initial position\n        left: `calc(${ring.x}% - ${ring.size / 2}px)`,\n        top: `calc(${ring.y}% - ${ring.size / 2}px)`,\n        animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`\n      }\n    }, ring.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: rings.map(ring => `\n          @keyframes float-${ring.id} {\n            0%, 100% {\n              transform: translate(0, 0);\n            }\n            50% {\n              transform: translate(\n                ${ring.xDirection * ring.xDistance}%, \n                ${ring.yDirection * ring.yDistance}%\n              );\n            }\n          }\n        `).join('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to generate gradient for rings\n_s(FloatingRingsBackground, \"be0nYme/AYWrNrS89ZblhZXCxaE=\");\n_c = FloatingRingsBackground;\nfunction getGradient(angle, darkMode) {\n  if (darkMode) {\n    // Dark mode gradient (lime variants)\n    return `linear-gradient(${angle}deg, rgba(132, 204, 22, 0.7), rgba(101, 163, 13, 0.7)) 1`;\n  } else {\n    // Light mode gradient (mixing lime and green)\n    return `linear-gradient(${angle}deg, rgba(132, 204, 22, 0.7), rgba(16, 185, 129, 0.7)) 1`;\n  }\n}\nconst PulsatingGradient = ({\n  darkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `absolute inset-0 ${darkMode ? 'bg-lime-500 opacity-30' : 'bg-gradient-to-r from-lime-500 to-green-500'} shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`,\n    style: {\n      animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PulsatingGradient;\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };\nvar _c, _c2;\n$RefreshReg$(_c, \"FloatingRingsBackground\");\n$RefreshReg$(_c2, \"PulsatingGradient\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","jsxDEV","_jsxDEV","SeededRandom","constructor","seed","random","x","Math","sin","floor","range","min","max","boolean","probability","FloatingRingsBackground","darkMode","_s","seededRandom","rings","setRings","generateRings","cols","window","innerWidth","rows","totalRings","newRings","row","col","cellWidth","cellHeight","xBase","yBase","xOffset","yOffset","xPos","yPos","size","thickness","xDirection","yDirection","duration","xDistance","yDistance","delay","gradientAngle","ringId","push","id","y","handleResize","addEventListener","removeEventListener","className","style","pointerEvents","children","map","ring","width","height","border","borderImage","getGradient","borderColor","background","left","top","animation","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","angle","PulsatingGradient","_c2","RotatingRingsBackground","$RefreshReg$"],"sources":["C:/wamp64/www/job-application-pipeline/client/src/components/BackgroundAnimation.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\n\r\n// Seeded random function to ensure consistent positions on refresh\r\nclass SeededRandom {\r\n  constructor(seed) {\r\n    this.seed = seed;\r\n  }\r\n\r\n  // Simple random number generator with seed\r\n  random() {\r\n    const x = Math.sin(this.seed++) * 10000;\r\n    return x - Math.floor(x);\r\n  }\r\n\r\n  // Get random number in range\r\n  range(min, max) {\r\n    return min + this.random() * (max - min);\r\n  }\r\n\r\n  // Random boolean with probability\r\n  boolean(probability = 0.5) {\r\n    return this.random() < probability;\r\n  }\r\n}\r\n\r\n// Floating rings background animation with fixed positions\r\nconst FloatingRingsBackground = ({ darkMode }) => {\r\n  // Use a constant seed for consistent positions\r\n  const seededRandom = useMemo(() => new SeededRandom(42), []);\r\n  const [rings, setRings] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Generate evenly distributed ring elements\r\n    const generateRings = () => {\r\n      const cols = window.innerWidth < 768 ? 2 : 3;\r\n      const rows = window.innerWidth < 768 ? 3 : 3;\r\n      const totalRings = cols * rows;\r\n      const newRings = [];\r\n      \r\n      // Create a grid\r\n      for (let row = 0; row < rows; row++) {\r\n        for (let col = 0; col < cols; col++) {\r\n          // Calculate position in the grid (evenly distributed)\r\n          // Add some randomness within each cell\r\n          const cellWidth = 100 / cols;\r\n          const cellHeight = 100 / rows;\r\n          \r\n          const xBase = col * cellWidth;\r\n          const yBase = row * cellHeight;\r\n          \r\n          // Add randomness within the cell (±20% of cell size)\r\n          const xOffset = seededRandom.range(-0.2, 0.2) * cellWidth;\r\n          const yOffset = seededRandom.range(-0.2, 0.2) * cellHeight;\r\n          \r\n          const xPos = xBase + (cellWidth / 2) + xOffset;\r\n          const yPos = yBase + (cellHeight / 2) + yOffset;\r\n          \r\n          // Ring properties\r\n          const size = seededRandom.range(200, 400); // Size between 200px and 400px\r\n          // Massively increased thickness (50-125px)\r\n          const thickness = seededRandom.range(50, 125);\r\n          \r\n          // Random movement direction\r\n          const xDirection = seededRandom.boolean() ? 1 : -1;\r\n          const yDirection = seededRandom.boolean() ? 1 : -1;\r\n          \r\n          // Random movement duration & distance\r\n          const duration = seededRandom.range(15, 45); // Animation duration between 15s and 45s\r\n          const xDistance = seededRandom.range(10, 30); // Move 10-30% horizontally\r\n          const yDistance = seededRandom.range(10, 30); // Move 10-30% vertically\r\n          \r\n          // Random delay\r\n          const delay = seededRandom.range(-20, 0);\r\n          \r\n          // Random gradient angle\r\n          const gradientAngle = Math.floor(seededRandom.range(0, 360));\r\n          \r\n          const ringId = row * cols + col;\r\n          \r\n          newRings.push({\r\n            id: ringId,\r\n            size,\r\n            x: xPos,\r\n            y: yPos,\r\n            thickness,\r\n            xDirection,\r\n            yDirection,\r\n            duration,\r\n            xDistance,\r\n            yDistance,\r\n            delay,\r\n            gradientAngle\r\n          });\r\n        }\r\n      }\r\n      \r\n      setRings(newRings);\r\n    };\r\n    \r\n    generateRings();\r\n    \r\n    // Regenerate on window resize\r\n    const handleResize = () => {\r\n      generateRings();\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [seededRandom]);\r\n\r\n  return (\r\n    <div className=\"rings-animation-container absolute inset-0 overflow-hidden z-0\" style={{ pointerEvents: 'none' }}>\r\n      {rings.map((ring) => (\r\n        <div\r\n          key={ring.id}\r\n          className=\"absolute rounded-full\"\r\n          style={{\r\n            width: `${ring.size}px`,\r\n            height: `${ring.size}px`,\r\n            // Use border property for reliable hollow rings\r\n            border: `${ring.thickness}px solid`,\r\n            borderImage: getGradient(ring.gradientAngle, darkMode),\r\n            // For browsers that don't support borderImage, provide a fallback color\r\n            borderColor: darkMode ? 'rgba(132, 204, 22, 0.7)' : 'rgba(16, 185, 129, 0.7)',\r\n            // Make the background transparent to create a hollow ring\r\n            background: 'transparent',\r\n            // Initial position\r\n            left: `calc(${ring.x}% - ${ring.size / 2}px)`,\r\n            top: `calc(${ring.y}% - ${ring.size / 2}px)`,\r\n            animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`,\r\n          }}\r\n        />\r\n      ))}\r\n      \r\n      {/* Create keyframe animations for each ring */}\r\n      <style>\r\n        {rings.map((ring) => `\r\n          @keyframes float-${ring.id} {\r\n            0%, 100% {\r\n              transform: translate(0, 0);\r\n            }\r\n            50% {\r\n              transform: translate(\r\n                ${ring.xDirection * ring.xDistance}%, \r\n                ${ring.yDirection * ring.yDistance}%\r\n              );\r\n            }\r\n          }\r\n        `).join('')}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Function to generate gradient for rings\r\nfunction getGradient(angle, darkMode) {\r\n  if (darkMode) {\r\n    // Dark mode gradient (lime variants)\r\n    return `linear-gradient(${angle}deg, rgba(132, 204, 22, 0.7), rgba(101, 163, 13, 0.7)) 1`;\r\n  } else {\r\n    // Light mode gradient (mixing lime and green)\r\n    return `linear-gradient(${angle}deg, rgba(132, 204, 22, 0.7), rgba(16, 185, 129, 0.7)) 1`;\r\n  }\r\n}\r\n\r\nconst PulsatingGradient = ({ darkMode }) => {\r\n  return (\r\n    <div\r\n      className={`absolute inset-0 ${\r\n        darkMode\r\n          ? 'bg-lime-500 opacity-30'\r\n          : 'bg-gradient-to-r from-lime-500 to-green-500'\r\n      } shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`}\r\n      style={{\r\n        animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}