{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\job-application-pipeline\\\\client\\\\src\\\\components\\\\BackgroundAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Floating rings background animation with evenly distributed positions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingRingsBackground = ({\n  darkMode\n}) => {\n  _s();\n  const [rings, setRings] = useState([]);\n  useEffect(() => {\n    // Generate ring elements with evenly distributed positions\n    const generateRings = () => {\n      // Determine grid size based on screen width\n      const cols = window.innerWidth < 768 ? 2 : 3;\n      const rows = window.innerWidth < 768 ? 3 : 3;\n      const ringsCount = window.innerWidth < 768 ? 5 : 8;\n      const newRings = [];\n\n      // Create rings in a grid pattern for even distribution\n      for (let i = 0; i < ringsCount; i++) {\n        // Calculate grid cell position\n        const col = i % cols;\n        const row = Math.floor(i / cols) % rows;\n\n        // Calculate base position for grid cell\n        const cellWidth = 100 / cols;\n        const cellHeight = 100 / rows;\n\n        // Add slight variation within the cell (±15% of cell size)\n        // Use deterministic variation based on ring index\n        const xVariance = (i * 13 % 30 - 15) / 100 * cellWidth;\n        const yVariance = (i * 17 % 30 - 15) / 100 * cellHeight;\n\n        // Center position in cell plus variance\n        const xPos = col * cellWidth + cellWidth / 2 + xVariance;\n        const yPos = row * cellHeight + cellHeight / 2 + yVariance;\n\n        // Calculate other properties deterministically but varied\n        const size = 150 + i * 37 % 300; // Size between 150px and 450px\n        const thickness = 50; // Thickness between 10px and 40px\n        const xDirection = i % 2 === 0 ? 1 : -1;\n        const yDirection = i % 3 === 0 ? 1 : -1;\n        const duration = 15 + i * 7 % 30; // Animation between 15s and 45s\n        const xDistance = 10 + i * 9 % 30; // Move 10-40% horizontally\n        const yDistance = 10 + i * 13 % 30; // Move 10-40% vertically\n        const delay = i * 5 % 20 * -1; // Deterministic delay\n        const colorChoice = i % 2; // Alternating colors\n\n        newRings.push({\n          id: i,\n          size,\n          x: xPos,\n          y: yPos,\n          thickness,\n          xDirection,\n          yDirection,\n          duration,\n          xDistance,\n          yDistance,\n          delay,\n          colorChoice\n        });\n      }\n      setRings(newRings);\n    };\n    generateRings();\n\n    // Regenerate on window resize\n    const handleResize = () => {\n      generateRings();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rings-animation-container absolute inset-0 overflow-hidden z-0\",\n    style: {\n      pointerEvents: 'none'\n    },\n    children: [rings.map(ring => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute rounded-full border-2 opacity-30\",\n      style: {\n        width: `${ring.size}px`,\n        height: `${ring.size}px`,\n        borderWidth: `${ring.thickness}px`,\n        // Use the fixed color choice\n        borderColor: darkMode ? 'rgba(132, 204, 22, 0.7)' // Brightened lime color for dark mode\n        : `rgba(${ring.colorChoice === 1 ? '132, 204, 22' : '16, 185, 129'}, 0.7)`,\n        // Alternate between lime-500 and green-500\n        borderStyle: 'solid',\n        animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`,\n        // Initial position\n        left: `calc(${ring.x}% - ${ring.size / 2}px)`,\n        top: `calc(${ring.y}% - ${ring.size / 2}px)`\n      }\n    }, ring.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: rings.map(ring => `\n          @keyframes float-${ring.id} {\n            0%, 100% {\n              transform: translate(0, 0);\n            }\n            50% {\n              transform: translate(\n                ${ring.xDirection * ring.xDistance}%, \n                ${ring.yDirection * ring.yDistance}%\n              );\n            }\n          }\n        `).join('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingRingsBackground, \"JfmvsfpCLuDPG3hpJ3SsfE59V0E=\");\n_c = FloatingRingsBackground;\nconst PulsatingGradient = ({\n  darkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `absolute inset-0 ${darkMode ? 'bg-lime-500 opacity-30' : 'bg-gradient-to-r from-lime-500 to-green-500'} shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`,\n    style: {\n      animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PulsatingGradient;\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };\nvar _c, _c2;\n$RefreshReg$(_c, \"FloatingRingsBackground\");\n$RefreshReg$(_c2, \"PulsatingGradient\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FloatingRingsBackground","darkMode","_s","rings","setRings","generateRings","cols","window","innerWidth","rows","ringsCount","newRings","i","col","row","Math","floor","cellWidth","cellHeight","xVariance","yVariance","xPos","yPos","size","thickness","xDirection","yDirection","duration","xDistance","yDistance","delay","colorChoice","push","id","x","y","handleResize","addEventListener","removeEventListener","className","style","pointerEvents","children","map","ring","width","height","borderWidth","borderColor","borderStyle","animation","left","top","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","PulsatingGradient","_c2","RotatingRingsBackground","$RefreshReg$"],"sources":["C:/wamp64/www/job-application-pipeline/client/src/components/BackgroundAnimation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Floating rings background animation with evenly distributed positions\r\nconst FloatingRingsBackground = ({ darkMode }) => {\r\n  const [rings, setRings] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Generate ring elements with evenly distributed positions\r\n    const generateRings = () => {\r\n      // Determine grid size based on screen width\r\n      const cols = window.innerWidth < 768 ? 2 : 3;\r\n      const rows = window.innerWidth < 768 ? 3 : 3;\r\n      const ringsCount = window.innerWidth < 768 ? 5 : 8;\r\n      \r\n      const newRings = [];\r\n      \r\n      // Create rings in a grid pattern for even distribution\r\n      for (let i = 0; i < ringsCount; i++) {\r\n        // Calculate grid cell position\r\n        const col = i % cols;\r\n        const row = Math.floor(i / cols) % rows;\r\n        \r\n        // Calculate base position for grid cell\r\n        const cellWidth = 100 / cols;\r\n        const cellHeight = 100 / rows;\r\n        \r\n        // Add slight variation within the cell (±15% of cell size)\r\n        // Use deterministic variation based on ring index\r\n        const xVariance = ((i * 13) % 30 - 15) / 100 * cellWidth;\r\n        const yVariance = ((i * 17) % 30 - 15) / 100 * cellHeight;\r\n        \r\n        // Center position in cell plus variance\r\n        const xPos = (col * cellWidth) + (cellWidth / 2) + xVariance;\r\n        const yPos = (row * cellHeight) + (cellHeight / 2) + yVariance;\r\n        \r\n        // Calculate other properties deterministically but varied\r\n        const size = 150 + ((i * 37) % 300); // Size between 150px and 450px\r\n        const thickness =  50; // Thickness between 10px and 40px\r\n        const xDirection = i % 2 === 0 ? 1 : -1;\r\n        const yDirection = i % 3 === 0 ? 1 : -1;\r\n        const duration = 15 + ((i * 7) % 30); // Animation between 15s and 45s\r\n        const xDistance = 10 + ((i * 9) % 30); // Move 10-40% horizontally\r\n        const yDistance = 10 + ((i * 13) % 30); // Move 10-40% vertically\r\n        const delay = ((i * 5) % 20) * -1; // Deterministic delay\r\n        const colorChoice = i % 2; // Alternating colors\r\n        \r\n        newRings.push({\r\n          id: i,\r\n          size,\r\n          x: xPos,\r\n          y: yPos,\r\n          thickness,\r\n          xDirection,\r\n          yDirection,\r\n          duration,\r\n          xDistance,\r\n          yDistance,\r\n          delay,\r\n          colorChoice\r\n        });\r\n      }\r\n      \r\n      setRings(newRings);\r\n    };\r\n    \r\n    generateRings();\r\n    \r\n    // Regenerate on window resize\r\n    const handleResize = () => {\r\n      generateRings();\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"rings-animation-container absolute inset-0 overflow-hidden z-0\" style={{ pointerEvents: 'none' }}>\r\n      {rings.map((ring) => (\r\n        <div\r\n          key={ring.id}\r\n          className=\"absolute rounded-full border-2 opacity-30\"\r\n          style={{\r\n            width: `${ring.size}px`,\r\n            height: `${ring.size}px`,\r\n            borderWidth: `${ring.thickness}px`,\r\n            // Use the fixed color choice\r\n            borderColor: darkMode \r\n              ? 'rgba(132, 204, 22, 0.7)' // Brightened lime color for dark mode\r\n              : `rgba(${ring.colorChoice === 1 ? '132, 204, 22' : '16, 185, 129'}, 0.7)`, // Alternate between lime-500 and green-500\r\n            borderStyle: 'solid',\r\n            animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`,\r\n            // Initial position\r\n            left: `calc(${ring.x}% - ${ring.size / 2}px)`,\r\n            top: `calc(${ring.y}% - ${ring.size / 2}px)`,\r\n          }}\r\n        />\r\n      ))}\r\n      \r\n      {/* Create keyframe animations for each ring */}\r\n      <style>\r\n        {rings.map((ring) => `\r\n          @keyframes float-${ring.id} {\r\n            0%, 100% {\r\n              transform: translate(0, 0);\r\n            }\r\n            50% {\r\n              transform: translate(\r\n                ${ring.xDirection * ring.xDistance}%, \r\n                ${ring.yDirection * ring.yDistance}%\r\n              );\r\n            }\r\n          }\r\n        `).join('')}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PulsatingGradient = ({ darkMode }) => {\r\n  return (\r\n    <div\r\n      className={`absolute inset-0 ${\r\n        darkMode\r\n          ? 'bg-lime-500 opacity-30'\r\n          : 'bg-gradient-to-r from-lime-500 to-green-500'\r\n      } shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`}\r\n      style={{\r\n        animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}