{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\job-application-pipeline\\\\client\\\\src\\\\components\\\\BackgroundAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\n\n// Floating rings background animation with fixed positions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingRingsBackground = ({\n  darkMode\n}) => {\n  _s();\n  // Use a seeded random number generator to get consistent values\n  const getSeededRandom = seed => {\n    // Simple pseudo-random number generator with seed\n    return function () {\n      seed = (seed * 9301 + 49297) % 233280;\n      return seed / 233280;\n    };\n  };\n\n  // Create a memo with all the random values we need to ensure consistency\n  const fixedRandomValues = useMemo(() => {\n    const rand = getSeededRandom(42); // Using seed 42\n\n    const ringsCount = window.innerWidth < 768 ? 5 : 8;\n    const values = [];\n    for (let i = 0; i < ringsCount; i++) {\n      values.push({\n        size: 150 + rand() * 300,\n        // Size between 150px and 450px\n        xPos: rand() * 100,\n        // Position between 0% and 100%\n        yPos: rand() * 100,\n        thickness: 10 + rand() * 30,\n        // Thickness between 10px and 40px\n        xDirection: rand() > 0.5 ? 1 : -1,\n        yDirection: rand() > 0.5 ? 1 : -1,\n        duration: 15 + rand() * 30,\n        // Animation between 15s and 45s\n        xDistance: 10 + rand() * 30,\n        // Move 10-40% horizontally\n        yDistance: 10 + rand() * 30,\n        // Move 10-40% vertically\n        delay: rand() * -20,\n        // Random delay\n        colorChoice: rand() // Used for color selection\n      });\n    }\n    return values;\n  }, []);\n  const [rings, setRings] = useState([]);\n  useEffect(() => {\n    // Generate ring elements with fixed random values\n    const generateRings = () => {\n      const ringsCount = window.innerWidth < 768 ? 5 : 8;\n      const newRings = [];\n      for (let i = 0; i < ringsCount; i++) {\n        // Use our pre-calculated random values\n        const fixedValues = fixedRandomValues[i];\n        newRings.push({\n          id: i,\n          size: fixedValues.size,\n          x: fixedValues.xPos,\n          y: fixedValues.yPos,\n          thickness: fixedValues.thickness,\n          xDirection: fixedValues.xDirection,\n          yDirection: fixedValues.yDirection,\n          duration: fixedValues.duration,\n          xDistance: fixedValues.xDistance,\n          yDistance: fixedValues.yDistance,\n          delay: fixedValues.delay,\n          colorChoice: fixedValues.colorChoice\n        });\n      }\n      setRings(newRings);\n    };\n    generateRings();\n\n    // Regenerate on window resize but maintain fixed values\n    const handleResize = () => {\n      generateRings();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [fixedRandomValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rings-animation-container absolute inset-0 overflow-hidden z-0\",\n    style: {\n      pointerEvents: 'none'\n    },\n    children: [rings.map(ring => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute rounded-full border-2 opacity-30\",\n      style: {\n        width: `${ring.size}px`,\n        height: `${ring.size}px`,\n        borderWidth: `${ring.thickness}px`,\n        // Use the fixed color choice\n        borderColor: darkMode ? 'rgba(132, 204, 22, 0.7)' // Brightened lime color for dark mode\n        : `rgba(${ring.colorChoice > 0.5 ? '132, 204, 22' : '16, 185, 129'}, 0.7)`,\n        // Fixed choice between lime-500 and green-500\n        borderStyle: 'solid',\n        animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`,\n        // Initial position\n        left: `calc(${ring.x}% - ${ring.size / 2}px)`,\n        top: `calc(${ring.y}% - ${ring.size / 2}px)`\n      }\n    }, ring.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: rings.map(ring => `\n          @keyframes float-${ring.id} {\n            0%, 100% {\n              transform: translate(0, 0);\n            }\n            50% {\n              transform: translate(\n                ${ring.xDirection * ring.xDistance}%, \n                ${ring.yDirection * ring.yDistance}%\n              );\n            }\n          }\n        `).join('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingRingsBackground, \"jUz6FxcaPBjckiSKIp/mFVXcDvQ=\");\n_c = FloatingRingsBackground;\nconst PulsatingGradient = ({\n  darkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `absolute inset-0 ${darkMode ? 'bg-lime-500 opacity-30' : 'bg-gradient-to-r from-lime-500 to-green-500'} shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`,\n    style: {\n      animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PulsatingGradient;\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };\nvar _c, _c2;\n$RefreshReg$(_c, \"FloatingRingsBackground\");\n$RefreshReg$(_c2, \"PulsatingGradient\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","jsxDEV","_jsxDEV","FloatingRingsBackground","darkMode","_s","getSeededRandom","seed","fixedRandomValues","rand","ringsCount","window","innerWidth","values","i","push","size","xPos","yPos","thickness","xDirection","yDirection","duration","xDistance","yDistance","delay","colorChoice","rings","setRings","generateRings","newRings","fixedValues","id","x","y","handleResize","addEventListener","removeEventListener","className","style","pointerEvents","children","map","ring","width","height","borderWidth","borderColor","borderStyle","animation","left","top","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","PulsatingGradient","_c2","RotatingRingsBackground","$RefreshReg$"],"sources":["C:/wamp64/www/job-application-pipeline/client/src/components/BackgroundAnimation.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\n\r\n// Floating rings background animation with fixed positions\r\nconst FloatingRingsBackground = ({ darkMode }) => {\r\n  // Use a seeded random number generator to get consistent values\r\n  const getSeededRandom = (seed) => {\r\n    // Simple pseudo-random number generator with seed\r\n    return function() {\r\n      seed = (seed * 9301 + 49297) % 233280;\r\n      return seed / 233280;\r\n    };\r\n  };\r\n  \r\n  // Create a memo with all the random values we need to ensure consistency\r\n  const fixedRandomValues = useMemo(() => {\r\n    const rand = getSeededRandom(42); // Using seed 42\r\n    \r\n    const ringsCount = window.innerWidth < 768 ? 5 : 8;\r\n    const values = [];\r\n    \r\n    for (let i = 0; i < ringsCount; i++) {\r\n      values.push({\r\n        size: 150 + rand() * 300, // Size between 150px and 450px\r\n        xPos: rand() * 100, // Position between 0% and 100%\r\n        yPos: rand() * 100,\r\n        thickness: 10 + rand() * 30, // Thickness between 10px and 40px\r\n        xDirection: rand() > 0.5 ? 1 : -1,\r\n        yDirection: rand() > 0.5 ? 1 : -1,\r\n        duration: 15 + rand() * 30, // Animation between 15s and 45s\r\n        xDistance: 10 + rand() * 30, // Move 10-40% horizontally\r\n        yDistance: 10 + rand() * 30, // Move 10-40% vertically\r\n        delay: rand() * -20, // Random delay\r\n        colorChoice: rand() // Used for color selection\r\n      });\r\n    }\r\n    \r\n    return values;\r\n  }, []);\r\n  \r\n  const [rings, setRings] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Generate ring elements with fixed random values\r\n    const generateRings = () => {\r\n      const ringsCount = window.innerWidth < 768 ? 5 : 8;\r\n      const newRings = [];\r\n      \r\n      for (let i = 0; i < ringsCount; i++) {\r\n        // Use our pre-calculated random values\r\n        const fixedValues = fixedRandomValues[i];\r\n        \r\n        newRings.push({\r\n          id: i,\r\n          size: fixedValues.size,\r\n          x: fixedValues.xPos,\r\n          y: fixedValues.yPos,\r\n          thickness: fixedValues.thickness,\r\n          xDirection: fixedValues.xDirection,\r\n          yDirection: fixedValues.yDirection,\r\n          duration: fixedValues.duration,\r\n          xDistance: fixedValues.xDistance,\r\n          yDistance: fixedValues.yDistance,\r\n          delay: fixedValues.delay,\r\n          colorChoice: fixedValues.colorChoice\r\n        });\r\n      }\r\n      \r\n      setRings(newRings);\r\n    };\r\n    \r\n    generateRings();\r\n    \r\n    // Regenerate on window resize but maintain fixed values\r\n    const handleResize = () => {\r\n      generateRings();\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [fixedRandomValues]);\r\n\r\n  return (\r\n    <div className=\"rings-animation-container absolute inset-0 overflow-hidden z-0\" style={{ pointerEvents: 'none' }}>\r\n      {rings.map((ring) => (\r\n        <div\r\n          key={ring.id}\r\n          className=\"absolute rounded-full border-2 opacity-30\"\r\n          style={{\r\n            width: `${ring.size}px`,\r\n            height: `${ring.size}px`,\r\n            borderWidth: `${ring.thickness}px`,\r\n            // Use the fixed color choice\r\n            borderColor: darkMode \r\n              ? 'rgba(132, 204, 22, 0.7)' // Brightened lime color for dark mode\r\n              : `rgba(${ring.colorChoice > 0.5 ? '132, 204, 22' : '16, 185, 129'}, 0.7)`, // Fixed choice between lime-500 and green-500\r\n            borderStyle: 'solid',\r\n            animation: `float-${ring.id} ${ring.duration}s ease-in-out infinite ${ring.delay}s`,\r\n            // Initial position\r\n            left: `calc(${ring.x}% - ${ring.size / 2}px)`,\r\n            top: `calc(${ring.y}% - ${ring.size / 2}px)`,\r\n          }}\r\n        />\r\n      ))}\r\n      \r\n      {/* Create keyframe animations for each ring */}\r\n      <style>\r\n        {rings.map((ring) => `\r\n          @keyframes float-${ring.id} {\r\n            0%, 100% {\r\n              transform: translate(0, 0);\r\n            }\r\n            50% {\r\n              transform: translate(\r\n                ${ring.xDirection * ring.xDistance}%, \r\n                ${ring.yDirection * ring.yDistance}%\r\n              );\r\n            }\r\n          }\r\n        `).join('')}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PulsatingGradient = ({ darkMode }) => {\r\n  return (\r\n    <div\r\n      className={`absolute inset-0 ${\r\n        darkMode\r\n          ? 'bg-lime-500 opacity-30'\r\n          : 'bg-gradient-to-r from-lime-500 to-green-500'\r\n      } shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl`}\r\n      style={{\r\n        animation: darkMode ? 'none' : 'pulse 5s ease-in-out infinite'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport { FloatingRingsBackground as RotatingRingsBackground, PulsatingGradient };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}